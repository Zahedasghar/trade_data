---
title: "trade_data_ESCAPE"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(tidyverse)
load("trade_data.RData")

```

You can add options to executable code like this=

```{r}
#| echo: false
names(trade_data)
trade_data$value <- as.numeric(as.character(trade_data$value)) # trade value as numeric
# drop missing values
trade_data <- trade_data[!is.na(trade_data$value),]
trade_data
```

The `echo: false` option disables the printing of code (only output is displayed).

We can now check the value in billion by dividing the previous function by a billion. Notice after the comma we specify the value column.

```{r}
trade_data %>% distinct(year)
trade_data<-trade_data %>% mutate(value=value/1000000000)

options(scipen = 999)
trade_data %>% filter(flow=="E"&reporter==924&year==2016&partner==1) %>% select(value)

## China trade with all countries
trade_data %>% filter(flow=="E"&reporter==924&year==2016&partner!=1) %>% summarise(sum(value))


```

Now if we calculate China's export with all countries, it is `r trade_data %>% filter(flow=="E"&reporter==924&year==2016&partner!=1) %>% summarise(sum(value))` . This is greater than we calculated earlier with world as a whole.

## Pakistan

```{r}

trade_data %>% filter(flow=="E"&reporter==564&year==2016&partner==1) %>% select(value)

trade_data %>% filter(flow=="E"&reporter==564&year==2016&partner!=1) %>% summarise(sum(value))


```

```{r}
CN_X<-trade_data %>% filter(flow=="E"&reporter==924&partner==1)
PK_X<-trade_data %>% filter(flow=="E"&reporter==564&partner==1)
ggplot(CN_X)+aes(x=year,y=value)+geom_line()+labs(y="USD, billions", title = "China's world export")
```

## Import and Export Together

```{r}
CN_XM<-trade_data %>% filter(reporter==924&partner==1)
ggplot(CN_XM, aes(x = year, y = value)) + 
  geom_line(aes(color = flow, linetype=flow)) + 
  scale_color_manual(values = c("darkred", "steelblue"))
```

## Top 10 exporting destination for China

Let's now show in a plot the top 10 countries China exported to in 2016.

We start by creating a table with Chinese exports in 2016 to individual countries:

```{r}
CN_X_countries <- trade_data %>% filter(flow=="E"&reporter==924&year==2016&partner==1)

```

But to get top trade partners we have to extract names of the countries for which following file is downloaded from the IMF.

## Country code

To select countries, \`isCountry" or code has to be set 1 so other categories like advanced countries and countries not specified are excluded

```{r}

imf_codes <- read_csv("imf_codes.csv")
codes<-imf_codes %>%  select(code,country,isCountry, region)
cntry_w <- codes %>% filter(isCountry==1|code==1) %>% select(code)
cntry_w
```

```{r, eval=FALSE}
CN_X_2016<-trade_data %>% filter(flow=="E"&reporter==924&year==2016&partner!=1&partner %in% cntry_w) 
CN_X_2016 
CN_X_2016<-trade_data[trade_data$flow=="E"& #select only exports
trade_data$reporter==924& #from china
trade_data$year==2016& #in 2016
trade_data$partner!=1& #where country is not world (code for world is 1)
trade_data$partner %in% cntry_w, #which is in the list of codes that we filtered earlier
"value" #variable we're interested in
]
sum(CN_X_2016)/1000000000
```

## Merge country codes and trade_data

```{r}
CN_X_countries<-trade_data %>% filter(flow=="E"&reporter==924&year==2016&partner!=1) 
CN_X_countries

```

```{r}
CNX_merged<-left_join(CN_X_countries,codes,by=c("partner"="code"))
CNX_merged<-CNX_merged %>% select(country, value, isCountry,region)
#CNX_merged <- merge(CN_X_countries,codes, by.x="partner",by.y="code")
#CNX_merged <- CNX_merged[, c("country", "value", "isCountry","region")]
#head(CNX_merged)

CNX_merged
# Exclude non-countries
CNX_merged<-CNX_merged %>% filter(isCountry==1)

```

## Top 10 exporting destination by value

```{r}
CNX_merged_top10<-CNX_merged %>% arrange(desc(value)) 
CNX_merged_top10<-head(CNX_merged_top10,10)
CNX_merged_top10
ggplot(CNX_merged_top10, aes(x = reorder(country,-value), y = value, fill=region))+geom_bar(stat='identity')
```

## Pakistan

Lets do the same exercise for Pakistan before proceeding further.

```{r}
PK_X_countries <-trade_data %>% filter(flow=="E"&reporter==564&year==2016&partner!=1)

PKX_merged<-left_join(PK_X_countries,codes,by=c("partner"="code"))
PKX_merged<-PKX_merged %>% select(country, value, isCountry,region)
PKX_merged
# Only keep countries
PKX_merged<-PKX_merged %>% filter(isCountry==1)

```

```{r}
PKX_merged_top10<-PKX_merged %>% arrange(desc(value)) 
PKX_merged_top10<-head(PKX_merged_top10,10)
PKX_merged_top10
ggplot(PKX_merged_top10, aes(x = reorder(country,-value), y = value*1000, fill=region))+geom_bar(stat='identity')
```


